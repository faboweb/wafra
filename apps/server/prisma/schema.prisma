// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Transaction {
  id          Int      @id @default(autoincrement())
  hash        String   @unique
  type        String
  from        String
  to          String?
  value       String
  blockNumber Int
  memo        String?
  createdAt   DateTime @default(now())
}

model Block {
  id          Int        @id @default(autoincrement())
  blockNumber      Int        @unique
  hash        String     @unique
  timestamp   DateTime
  error       String?
}

model Deposit {
  id          Int      @id @default(autoincrement())
  transferTxHash String? @unique
  depositTxHash String? @unique
  referenceHash String @unique
  from        String
  to          String?
  value       String
  createdAt   DateTime @default(now())
  error       String?
}

model Wallet {
  id          Int      @id @default(autoincrement())
  address     String   @unique
  depositAddress String @unique
  privateKey  String @unique
  createdAt   DateTime @default(now())
}

model AccountBalance {
  id          Int      @id @default(autoincrement())
  address     String   @unique
  balance     BigInt
  availableBalance BigInt
  updatedAt   DateTime @updatedAt
  yieldLastUpdatedAt DateTime
  effectiveYield BigInt @default(0)
}

model RedemptionQueue {
  id          Int      @id @default(autoincrement())
  address     String   
  amount      String
  index       BigInt @unique
  status      String   @default("pending") // pending, processing, completed, failed
  txHash      String?  @unique
  createdAt   DateTime @default(now())
  processedAt DateTime?
  error       String?
}

model CurrencyRate {
  id        Int      @id @default(autoincrement())
  currency  String   // e.g., "EUR", "GBP"
  rate      Decimal  @db.Decimal(18, 8)
  timestamp DateTime @default(now())

  @@unique([currency, timestamp])
  @@index([timestamp])
}

model FundMetrics {
  id          Int      @id @default(autoincrement())
  timestamp   DateTime @default(now())
  totalSupply String   // Using String for BigNumber values
  totalValue  String
  sharePrice  Float   // Derived from totalValue/totalSupply

  @@index([timestamp])
}

model Order {
  id Int      @id @default(autoincrement())
  orderId String @unique
  foreignOrderId String? @unique
  timestamp   DateTime @default(now())
  amount Float
  usdcAmount BigInt
  currency String
  depositAddress String
  status String @default("pending") // pending, payed, deposited
}

model AccessKey {
  id            Int      @id @default(autoincrement())
  apiKey        String   @unique // Initial API key provided
  userId        String   // External user ID from OAuth provider  
  provider      String   // OAuth provider name (e.g., "google", "github")
  accessToken   String   // Current access token
  refreshToken  String   // Refresh token for getting new access tokens
  scope         String?  // OAuth scopes
  expiresAt     DateTime // When the access token expires
  createdAt     DateTime @default(now())
  lastUsedAt    DateTime @updatedAt
  isRevoked     Boolean  @default(false)

  @@index([userId])
  @@index([apiKey])
}

